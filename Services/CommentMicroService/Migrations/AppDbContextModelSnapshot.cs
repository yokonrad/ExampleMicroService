// <auto-generated />
using System;
using CommentMicroService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CommentMicroService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CommentMicroService.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 11, 16, 14, 40, 49, 830, DateTimeKind.Utc).AddTicks(2984),
                            PostId = 1,
                            Text = "Post #1 Comment #1",
                            UpdatedAt = new DateTime(2024, 11, 16, 14, 40, 49, 830, DateTimeKind.Utc).AddTicks(2984)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 11, 16, 14, 40, 49, 830, DateTimeKind.Utc).AddTicks(2995),
                            PostId = 1,
                            Text = "Post #1 Comment #2",
                            UpdatedAt = new DateTime(2024, 11, 16, 14, 40, 49, 830, DateTimeKind.Utc).AddTicks(2996)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 11, 16, 14, 40, 49, 830, DateTimeKind.Utc).AddTicks(3005),
                            PostId = 2,
                            Text = "Post #2 Comment #1",
                            UpdatedAt = new DateTime(2024, 11, 16, 14, 40, 49, 830, DateTimeKind.Utc).AddTicks(3006)
                        });
                });

            modelBuilder.Entity("CommentMicroService.Entities.Post", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1
                        },
                        new
                        {
                            Id = 2
                        },
                        new
                        {
                            Id = 3
                        });
                });

            modelBuilder.Entity("CommentMicroService.Entities.Comment", b =>
                {
                    b.HasOne("CommentMicroService.Entities.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("CommentMicroService.Entities.Post", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
